{
  "os": [
    "linux",
    "osx"
  ],
  "dist": "xenial",
  "sudo": false,
  "cache": {
    "directories": [
      "$HOME/travis-cache"
    ]
  },
  "group": "stable",
  "addons": {
    "apt": {
      "sources": [
        "ubuntu-toolchain-r-test"
      ],
      "packages": [
        "language-pack-is",
        "git-svn",
        "apache2",
        "gcc-8"
      ]
    }
  },
  "matrix": {
    "include": [
      {
        "os": "linux",
        "env": "jobname=GETTEXT_POISON",
        "dist": "xenial",
        "addons": null,
        "compiler": null,
        "before_install": null
      },
      {
        "os": "linux",
        "env": "jobname=Windows",
        "dist": "xenial",
        "addons": null,
        "script": [
          "test \"$TRAVIS_REPO_SLUG\" != \"git/git\" || ci/run-windows-build.sh $TRAVIS_BRANCH $(git rev-parse HEAD)\n"
        ],
        "compiler": null,
        "after_failure": null,
        "before_install": null
      },
      {
        "os": "linux",
        "env": "jobname=Linux32",
        "dist": "trusty",
        "addons": null,
        "script": "ci/run-linux32-docker.sh",
        "compiler": null,
        "services": [
          "docker"
        ],
        "before_install": null
      },
      {
        "os": "linux",
        "env": "jobname=StaticAnalysis",
        "dist": "xenial",
        "addons": {
          "apt": {
            "packages": [
              "coccinelle"
            ]
          }
        },
        "script": "ci/run-static-analysis.sh",
        "compiler": null,
        "after_failure": null,
        "before_install": null
      },
      {
        "os": "linux",
        "env": "jobname=Documentation",
        "dist": "xenial",
        "addons": {
          "apt": {
            "packages": [
              "asciidoc",
              "xmlto"
            ]
          }
        },
        "script": "ci/test-documentation.sh",
        "compiler": null,
        "after_failure": null,
        "before_install": null
      }
    ]
  },
  "script": "ci/run-build-and-tests.sh",
  ".result": "configured",
  "compiler": [
    "clang",
    "gcc"
  ],
  "language": "c",
  "after_failure": "ci/print-test-failures.sh",
  "notifications": {
    "email": false
  },
  "before_install": "ci/install-dependencies.sh"
